S = FUNDEFS
<FUNDEFS> = FUNDEF FUNDEFS
        | ε

FUNDEF = SYM_IDENTIFIER SYM_LPAREN PARAMS SYM_RPAREN BLOCK

PARAMS = SYM_IDENTIFIER REST_PARAMS
       | ε

<REST_PARAMS> = SYM_COMMA SYM_IDENTIFIER REST_PARAMS
            | ε

BLOCK = SYM_LBRACE STATEMENTS SYM_RBRACE

<STATEMENTS> = STATEMENT STATEMENTS
           | ε

<STATEMENT> = ASSIGNMENT
          | IF
          | WHILE_LOOP
          | BLOCK
          | RETURN
          | PRINT

ASSIGNMENT = SYM_IDENTIFIER SYM_ASSIGN EXPR SYM_SEMICOLON

IF = SYM_IF CONDITION BLOCK ELSE

WHILE_LOOP = SYM_WHILE CONDITION BLOCK

RETURN = SYM_RETURN EXPR SYM_SEMICOLON

PRINT = SYM_PRINT EXPR SYM_SEMICOLON

<EXPR> = TERM
     | SUM
     | DIFFERENCE

SUM = EXPR SYM_PLUS TERM

DIFFERENCE = EXPR SYM_MINUS TERM

<TERM> = FACTOR
       | MULTIPLICATION
       | REMAINDER
       | DIVISION

MULTIPLICATION = TERM SYM_ASTERISK FACTOR

REMAINDER = TERM SYM_MODULO FACTOR

DIVISION = TERM SYM_DIVISION FACTOR

<FACTOR> = SYM_INT
       | SYM_IDENTIFIER
       | SYM_LPAREN EXPR SYM_RPAREN

ELSE = SYM_ELSE BLOCK
     | ε

<CONDITION> = SYM_LPAREN BOOL_EXPR SYM_RPAREN

<BOOL_EXPR> = EQ
          | NOT_EQ
          | LESSER
          | LESSER_EQ
          | GREATER
          | GREATER_EQ

EQ = EXPR SYM_EQ EXPR
NOT_EQ = EXPR SYM_NOT_EQ EXPR
LESSER = EXPR SYM_LESSER EXPR
LESSER_EQ = EXPR SYM_LESSER_EQ EXPR
GREATER = EXPR SYM_GREATER EXPR
GREATER_EQ = EXPR SYM_GREATER_EQ EXPR

<SYM_LPAREN> = <"(">
<SYM_RPAREN> = <")">
<SYM_COMMA> = <",">
<SYM_LBRACE> = <"{">
<SYM_RBRACE> = <"}">
<SYM_SEMICOLON> = <";">
<SYM_RETURN> = <"return">
<SYM_PRINT> = <"print">
<SYM_ASSIGN> = <"=">
<SYM_PLUS> = <"+">
<SYM_MINUS> = <"-">
<SYM_ASTERISK> = <"*">
<SYM_DIVISION> = <"/">
<SYM_MODULO> = <"%">
<SYM_IF> = <"if">
<SYM_WHILE> = <"while">
<SYM_ELSE> = <"else">
<SYM_EQ> = <"==">
<SYM_NOT_EQ> = <"!=">
<SYM_LESSER> = <"<">
<SYM_GREATER> = <">">
<SYM_LESSER_EQ> = <"<=">
<SYM_GREATER_EQ> = <">=">
<SYM_INT_KW> = <"int">
<SYM_VOID_KW> = <"void">
<SYM_CHAR_KW> = <"char">
<SYM_STRUCT_KW> = <"struct">
<SYM_DOT> = <".">
<SYM_LBRACKET> = <"[">
<SYM_RBRACKET> = <"]">
SYM_INT = #"-?[0-9]+"
SYM_CHAR = #"'[\p{ASCII}]'"
SYM_STRING = #"\".*\""
SYM_IDENTIFIER = #"[a-zA-Z_][a-zA-Z0-9_]*"
